TRACKS = ("gaps", "repeats", "segmental_duplications", "genes", "wssd", "tandem_repeats")

subworkflow sequences:
    workdir: "../sequences"

subworkflow segmental_duplications:
    workdir: "../segmental_duplications"

subworkflow genes:
    workdir: "../genes"

subworkflow wssd:
    workdir: "../wssd"

subworkflow tandem_repeats:
    workdir: "../tandem_repeats"

rule trackdefs:
    input: expand("{track}.trackDb.txt", track=TRACKS)
    output: "trackDb.txt"
    shell: "cat {input} > {output}"

rule tandem_repeats_trackdef:
    input: "tandem_repeats.bb"
    output: "tandem_repeats.trackDb.txt"
    params: sge_opts=""
    shell: """echo "track tandem_repeats
shortLabel Tandem repeats
longLabel Tandem repeats
type bigBed 12
bigDataUrl {input}
group duplications
" > {output}
"""

rule tandem_repeats_bigbed:
    input: tandem_repeats("tandem_repeats.bed"), sequences("bac.out")
    output: "tandem_repeats.bb"
    params: sge_opts=""
    shell: "bedToBigBed {input} {output}"

rule wssd_duplications_trackdef:
    input: "wssd.bb"
    output: "wssd.trackDb.txt"
    params: sge_opts=""
    shell: """echo "track wssd
shortLabel WSSD
longLabel WSSD
type bigBed 3
bigDataUrl {input}
group duplications
" > {output}
"""

rule wssd_duplications:
    input: wssd("wins/wssdGE10K_nogap.tab"), sequences("bac.out")
    output: "wssd.bb"
    params: sge_opts=""
    shell: "bedToBigBed {input} {output}"

rule segmental_duplications_trackdef:
    input: "segmental_duplications.bb"
    output: "segmental_duplications.trackDb.txt"
    params: sge_opts=""
    shell: """echo "track wgac
shortLabel Segmental duplications
longLabel Segmental duplications
type bigBed 9
bigDataUrl {input}
itemRgb on
group duplications
" > {output}
"""

rule segmental_duplications:
    input: segmental_duplications("segmental_duplications_in_bacs.bed"), sequences("bac.out")
    output: "segmental_duplications.bb"
    params: sge_opts=""
    shell: "bedToBigBed {input} {output}"

rule genes_trackdef:
    input: "genes.bb"
    output: "genes.trackDb.txt"
    params: sge_opts=""
    shell: """echo "track genes
shortLabel Genes
longLabel Genes
type bigBed 12
bigDataUrl {input}
group genes
" > {output}
"""

rule genes:
    input: genes("mRNA.named.bed"), sequences("bac.out")
    output: "genes.bb"
    params: sge_opts=""
    shell: "bedToBigBed {input} {output}"

rule repeats_trackdef:
    input: "repeats.bb"
    output: "repeats.trackDb.txt"
    params: sge_opts=""
    shell: """echo "track repeats
shortLabel Repeats
longLabel Repeats
type bigBed 6
bigDataUrl {input}
spectrum on
scoreMax 1000
scoreMin 0
group varRep
" > {output}
"""

rule repeats_bigbed:
    input: sequences("rmsk.combined.bed"), sequences("bac.out")
    output: "repeats.bb"
    params: sge_opts=""
    shell: "bedToBigBed {input} {output}"

rule gaps_trackdef:
    input: "gaps.bb"
    output: "gaps.trackDb.txt"
    params: sge_opts=""
    shell: """echo "track gaps
shortLabel Gaps
longLabel Gaps
type bigBed 3
bigDataUrl {input}
group map
" > {output}
"""

rule gaps_bigbed:
    input: sequences("gaps.tab"), sequences("bac.out")
    output: "gaps.bb"
    params: sge_opts=""
    shell: "bedToBigBed {input} {output}"
