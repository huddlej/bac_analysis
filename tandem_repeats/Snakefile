configfile: "../config.json"

subworkflow sequences:
    workdir: "../sequences"

with open(config["clone_ids"], "r") as clone_ids_fh:
    ACCESSIONS = [line.rstrip() for line in clone_ids_fh]

# Find tandem repeats within clones.

rule all:
    input: "tandem_repeats.bed"
    params: sge_opts=""

rule merge_tandem_repeats:
    input: expand("tandem_repeats/{accession}.bed", accession=ACCESSIONS)
    output: "tandem_repeats.bed"
    params: sge_opts=""
    shell: "sort -k 1,1 -k 2,2n {input} > {output}"

rule convert_psl_to_tandem_repeats_bed:
    input: "psl/{accession}.psl"
    output: "tandem_repeats/{accession}.bed"
    params: sge_opts=""
    shell: "pslToBed {input} {output}"

rule convert_lav_to_psl:
    input: "lav/{accession}.lav"
    output: "psl/{accession}.psl"
    params: sge_opts=""
    shell: "lavToPsl {input} {output}"

rule self_align_masked_clone:
    input: sequences("mask/{accession}.all_masked.fasta")
    output: lav="lav/{accession}.lav", dotplot_tab="dotplot/{accession}.tab", dotplot_pdf="dotplot/{accession}.pdf"
    params: sge_opts="-l mfree=4G"
    shell: "~jlhudd/src/lastz-distrib-1.02.00/src/lastz {input} --self --format=lav --rdotplot={output.dotplot_tab} > {output.lav}; Rscript ~jlhudd/fasta_tools/lastz_dotplot.R {output.dotplot_tab} {output.dotplot_pdf}"

rule get_2bit_info:
    input: "clones.2bit"
    output: "clones.chromInfo"
    params: sge_opts=""
    shell: "twoBitInfo {input} {output}"

rule create_fasta_for_clones:
    input: "clones.2bit"
    output: "clones.fasta"
    params: sge_opts=""
    shell: "twoBitToFa {input} {output}"

rule create_2bit_for_clones:
    input: sequences("all_masked")
    output: "clones.2bit"
    params: sge_opts=""
    shell: "faToTwoBit {input}/* {output}"

rule clean:
    params: sge_opts=""
    shell: "rm -rf clones* lav/ dotplot/ psl/ tandem_repeats*"
